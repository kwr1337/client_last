{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\\\u0410\\u0434\\u043C\\u0438\\u043D\\u0438\\u0441\\u0442\\u0440\\u0430\\u0442\\u043E\\u0440\\\\Desktop\\\\client_finish\\\\src\\\\components\\\\TypeBar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { Context } from \"../index\";\nimport { observer } from \"mobx-react-lite\";\nimport Select from \"react-select\";\nconst TypeBar = observer(_c = _s(() => {\n  _s();\n\n  const {\n    product\n  } = useContext(Context);\n  const {\n    options\n  } = product.types;\n\n  let formatOptions = (options = []) => {\n    return product.types.map(option => {\n      return {\n        value: option.name,\n        label: option.name\n      };\n    });\n  };\n\n  let onChange = value => {\n    console.log(value);\n    product.types.map(type => {\n      console.log(\"type\" + type.name);\n\n      if (value.value === type.name) {\n        product.setSelectedType(type);\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Select // menuIsOpen\n    , {\n      classNamePrefix: \"react-select\",\n      options: formatOptions(options),\n      expanded: \"true\",\n      onChange: onChange // defaultMenuIsOpen\n      ,\n      placeholder: \"Продукция\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}, \"Skg8gFcKuT4ozoWp3cm1lzUKfyY=\"));\n_c2 = TypeBar;\nexport default TypeBar;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TypeBar$observer\");\n$RefreshReg$(_c2, \"TypeBar\");","map":{"version":3,"sources":["C:/Users/Администратор/Desktop/client_finish/src/components/TypeBar.js"],"names":["React","useContext","Context","observer","Select","TypeBar","product","options","types","formatOptions","map","option","value","name","label","onChange","console","log","type","setSelectedType"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,SAAQC,OAAR,QAAsB,UAAtB;AACA,SAAQC,QAAR,QAAuB,iBAAvB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAIA,MAAMC,OAAO,GAAGF,QAAQ,SAAC,MAAM;AAAA;;AAC3B,QAAM;AAACG,IAAAA;AAAD,MAAYL,UAAU,CAACC,OAAD,CAA5B;AACA,QAAM;AAACK,IAAAA;AAAD,MAAYD,OAAO,CAACE,KAA1B;;AAIA,MAAIC,aAAa,GAAG,CAACF,OAAO,GAAG,EAAX,KAAkB;AAClC,WAAOD,OAAO,CAACE,KAAR,CAAcE,GAAd,CAAkBC,MAAM,IAAI;AAC/B,aAAO;AAACC,QAAAA,KAAK,EAAED,MAAM,CAACE,IAAf;AAAqBC,QAAAA,KAAK,EAAEH,MAAM,CAACE;AAAnC,OAAP;AACH,KAFM,CAAP;AAGH,GAJD;;AAOA,MAAIE,QAAQ,GAAIH,KAAD,IAAW;AACtBI,IAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACAN,IAAAA,OAAO,CAACE,KAAR,CAAcE,GAAd,CAAmBQ,IAAD,IAAU;AACxBF,MAAAA,OAAO,CAACC,GAAR,CAAY,SAASC,IAAI,CAACL,IAA1B;;AACA,UAAID,KAAK,CAACA,KAAN,KAAgBM,IAAI,CAACL,IAAzB,EAA+B;AAC3BP,QAAAA,OAAO,CAACa,eAAR,CAAwBD,IAAxB;AACH;AACJ,KALD;AAMH,GARD;;AASA,sBACI;AAAA,2BACI,QAAC,MAAD,CACI;AADJ;AAEI,MAAA,eAAe,EAAC,cAFpB;AAGI,MAAA,OAAO,EAAET,aAAa,CAACF,OAAD,CAH1B;AAII,MAAA,QAAQ,EAAC,MAJb;AAKI,MAAA,QAAQ,EAAEQ,QALd,CAMI;AANJ;AAOI,MAAA,WAAW,EAAE;AAPjB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA6BH,CAnDuB,kCAAxB;MAAMV,O;AAqDN,eAAeA,OAAf","sourcesContent":["import React, {useContext} from 'react';\r\nimport {Context} from \"../index\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport Select from \"react-select\";\r\n\r\n\r\n\r\nconst TypeBar = observer(() => {\r\n    const {product} = useContext(Context)\r\n    const {options} = product.types;\r\n\r\n\r\n\r\n    let formatOptions = (options = []) => {\r\n        return product.types.map(option => {\r\n            return {value: option.name, label: option.name};\r\n        });\r\n    };\r\n\r\n\r\n    let onChange = (value) => {\r\n        console.log(value)\r\n        product.types.map((type) => {\r\n            console.log(\"type\" + type.name)\r\n            if (value.value === type.name) {\r\n                product.setSelectedType(type)\r\n            }\r\n        })\r\n    }\r\n    return (\r\n        <div>\r\n            <Select\r\n                // menuIsOpen\r\n                classNamePrefix=\"react-select\"\r\n                options={formatOptions(options)}\r\n                expanded='true'\r\n                onChange={onChange}\r\n                // defaultMenuIsOpen\r\n                placeholder={\"Продукция\"}\r\n\r\n            />\r\n\r\n            {/*{product.types.map(type=>*/}\r\n            {/*    <div className=\"filter__button\" > <a*/}\r\n            {/*       style={{cursor: 'pointer'}}*/}\r\n            {/*       active={type.id === product.selectedType.id}*/}\r\n            {/*       key={type.id}*/}\r\n            {/*       onClick={()=> product.setSelectedType(type)}>*/}\r\n            {/*        {type.name}*/}\r\n            {/*    </a>*/}\r\n            {/*    </div>*/}\r\n            {/*)}*/}\r\n\r\n            {/*{product.types.map(type=>*/}\r\n            {/*    options.value.push(type.id === product.selectedType.id)*/}\r\n            {/*    )}*/}\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default TypeBar;"]},"metadata":{},"sourceType":"module"}